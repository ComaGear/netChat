<?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--public boolean initializeGroup();-->
<!--public boolean insertGroup(GroupChat group);-->
<!--public GroupChat getGroupById(Integer id);-->
<!--public List<GroupChat> getGroupByAll();-->
<!--public boolean deleteGroupById(Integer id);-->

<!--private Integer id;-->
<!--private String groupName;-->
<!--private String detail;-->
<!--private Date date;-->
<!--private User creator;-->

<mapper namespace="com.tomcat.netChat.repository.dao.GroupChatMapper">

    <update id="initializeGroup">
        create table if not exists group_chat
        (
            id         int auto_increment not null,
            group_name varchar(255)       not null,
            detail     varchar(255),
            date       timestamp          not null,
            creator_id int                not null,
            primary key (id),
            foreign key (creator_id) references user (id)
        )
    </update>

    <insert id="insertGroup" useGeneratedKeys="true" keyProperty="id">
        insert into group_chat (group_name, detail, creator_id)
        values (#{groupName},
                #{detail},
                #{creator.id})
    </insert>

    <select id="getGroupById" resultType="com.tomcat.netChat.javaBeans.GroupChat" resultMap="groupChat">
        select g.id         as group_id,
               g.group_name as group_name,
               g.detail     as group_detail,
               g.date       as group_date,
               u.id         as user_id,
               u.user_name  as user_name,
               u.comment    as user_comment
        from group_chat g
                 left join user u on g.creator_id = u.id
        where g.id = #{id}
    </select>

    <select id="getGroupByName" resultType="com.tomcat.netChat.javaBeans.GroupChat">
        select *
        from group_chat
        where group_name = '%${groupName}%'
    </select>

    <select id="getGroupByUser" resultType="com.tomcat.netChat.javaBeans.GroupChat" resultMap="groupChat">
        select g.id         as group_id,
               g.group_name as group_name,
               g.detail     as group_detail,
               g.date       as group_date,
               u.id         as user_id,
               u.user_name  as user_name,
               u.comment    as user_comment
        from group_chat g
                 left join user u on g.creator_id = u.id
        where creator_id = #{id}
    </select>

    <select id="getGroupByAll" resultType="com.tomcat.netChat.javaBeans.GroupChat" resultMap="groupChat">
        select g.id         as group_id,
               g.group_name as group_name,
               g.detail     as group_detail,
               g.date       as group_date,
               u.id         as user_id,
               u.user_name  as user_name,
               u.comment    as user_comment
        from group_chat g
                 left join user u on g.creator_id = u.id
    </select>

    <delete id="deleteGroupById">
        delete
        from group_chat
        where id = #{id}
    </delete>

    <resultMap id="groupChat" type="com.tomcat.netChat.javaBeans.GroupChat">
        <id property="id" column="group_id"/>
        <result property="groupName" column="group_name"/>
        <result property="detail" column="group_detail"/>
        <result property="date" column="group_date" jdbcType="TIMESTAMP"/>
        <association property="creator" column="user_id" javaType="com.tomcat.netChat.javaBeans.User"
                     resultMap="simpleUserInfo"/>
    </resultMap>

    <resultMap id="simpleUserInfo" type="com.tomcat.netChat.javaBeans.User">
        <id property="id" column="user_id"/>
        <result property="name" column="user_name"/>
        <result property="comment" column="user_comment"/>
    </resultMap>
</mapper>
